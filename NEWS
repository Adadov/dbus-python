D-Bus Python Bindings 0.80rc3 (aka 0.79.93) (19 December 2006)
==
- The "break the world" release
- Rewrite dbus_bindings (Pyrex) as _dbus_bindings (C) - API changes!
- Define what's public API
- Move low-level but still public API to dbus.lowlevel
- Remove Variant class, add variant_level property on all D-Bus types
- Make signal matching keep working as expected when name ownership changes
- Use unambiguous D-Bus types when transferring from D-Bus to Python
- Follow well-defined rules when transferring from Python to D-Bus
- Add utf8_strings and byte_arrays options in various places, so a user
  can tweak the calling conventions to be more efficient
- Raise RuntimeError if user tries to use a connection with no main loop
- Redo main loop machinery so we can add pure-Python main loops later without
  API breakage
- Allow construction of a dbus.service.Object if you don't have a BusName
  (or even a Bus)
- Port introspection XML parser from libxml2 (external package) to expat
  (included with Python)
- Port build system from distutils to autoconf/automake/libtool
- Install a header file for third-party main loop integration
- Make compatible with Python 2.5
- Add docstrings throughout
- Add more tests
- Add interoperability tests (which interoperate with Java)
- Add copyright notices!

D-Bus Python Bindings 0.71 (24 July 2006)
==
- Binary modules are now installed in the correct directory
- Distutils exports the dbus and dbus-glib cflags

D-Bus Python Bindings 0.70 (17 July 2006)
==
- First release of bindings split
- Move to a distutils build enviornment
- It is possible to now specify sender_keyword="foo", path_keyword="bar" when 
  adding a signal listener
